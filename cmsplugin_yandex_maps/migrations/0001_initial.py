# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-02-06 00:05
from __future__ import unicode_literals

import cmsplugin_yandex_maps.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cms', '0016_auto_20160608_1535'),
    ]

    operations = [
        migrations.CreateModel(
            name='Behavior',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('behavior', models.CharField(max_length=30, unique=True, verbose_name='Behavior')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control', models.CharField(max_length=30, unique=True, verbose_name='Control')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Placemark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Title')),
                ('auto_coordinates', models.BooleanField(default=True, verbose_name='Auto coordinates')),
                ('place', models.CharField(blank=True, max_length=300, null=True, verbose_name='Place')),
                ('place_lt', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('place_lg', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('icon_color', models.CharField(choices=[('blue', 'Blue'), ('red', 'Red'), ('darkOrange', 'Dark orange'), ('night', 'Night'), ('darkBlue', 'DarkBlue'), ('pink', 'Pink'), ('gray', 'Gray'), ('brown', 'Brown'), ('darkGreen', 'Dark green'), ('violet', 'Violet'), ('black', 'Black'), ('yellow', 'Yellow'), ('green', 'Green'), ('orange', 'Orange'), ('lightBlue', 'Light blue'), ('olive', 'Olive')], default='red', max_length=15, verbose_name='Marker icon color')),
                ('icon_style', models.CharField(choices=[('default', 'Default'), ('stretchy', 'Stretchy'), ('doted', 'Doted'), ('glif', 'With glif'), ('image', 'Image')], default='default', max_length=8, verbose_name='Marker icon style')),
                ('icon_circle', models.BooleanField(default=False, verbose_name='Circle icon')),
                ('icon_caption', models.BooleanField(default=False, verbose_name='Caption')),
                ('icon_glif', models.CharField(choices=[('Home', 'Home'), ('Airport', 'Airport'), ('Bar', 'Bar'), ('Food', 'Food'), ('Cinema', 'Cinema'), ('MassTransit', 'Mass Transit'), ('Toile', 'Toile'), ('Beach', 'Beach'), ('Zoo', 'Zoo'), ('Underpass', 'Underpass'), ('Run', 'Run'), ('Bicycle', 'Bicycle'), ('Bicycle2', 'Bicycle2'), ('Garden', 'Garden'), ('Observation', 'Observation'), ('Entertainment', 'Entertainment'), ('Family', 'Family'), ('Theater', 'Theater'), ('Book', 'Book'), ('Waterway', 'Waterway'), ('RepairShop', 'Repair Shop'), ('Post', 'Post'), ('WaterPark', 'Water Park'), ('Worship', 'Worship'), ('Fashion', 'Fashion'), ('Waste', 'Waste'), ('Money', 'Money'), ('Hydro', 'Hydro'), ('Science', 'Science'), ('Auto', 'Auto'), ('Shopping', 'Shopping'), ('Sport', 'Sport'), ('Video', 'Video'), ('Railway', 'Railway'), ('Park', 'Park'), ('Pocket', 'Pocket'), ('NightClub', 'Night Club'), ('Pool', 'Pool'), ('Medical', 'Medical'), ('Vegetation', 'Vegetation'), ('Government', 'Government'), ('Circus', 'Circus'), ('RapidTransit', 'Rapid Transit'), ('Education', 'Education'), ('Mountain', 'Mountain'), ('CarWash', 'Car Wash'), ('Factory', 'Factory'), ('Court', 'Court'), ('Hotel', 'Hotel'), ('Christian', 'Christian'), ('Laundry', 'Laundry'), ('Souvenirs', 'Souvenirs'), ('Dog', 'Dog'), ('Leisure', 'Leisure')], default='Home', max_length=30, verbose_name='Icon glif')),
                ('icon_image', models.ImageField(blank=True, max_length=500, null=True, upload_to=cmsplugin_yandex_maps.models.upload_path_handler, verbose_name='Icon image')),
                ('icon_width', models.IntegerField(default=30, verbose_name='Icon width')),
                ('icon_height', models.IntegerField(default=30, verbose_name='Icon height')),
                ('icon_offset_horizontal', models.IntegerField(default=0, verbose_name='Icon offset horizontal')),
                ('icon_offset_vertical', models.IntegerField(default=0, verbose_name='Icon offset vertical')),
                ('icon_content_offset_horizontal', models.IntegerField(default=0, verbose_name='Icon content offset horizontal')),
                ('icon_content_offset_vertical', models.IntegerField(default=0, verbose_name='Icon content offset vertical')),
                ('hint', models.CharField(blank=True, max_length=140, null=True, verbose_name='Placemark hint')),
                ('balloon', models.CharField(blank=True, max_length=300, null=True, verbose_name='Balloon content')),
                ('balloonHeader', models.TextField(blank=True, help_text='Can use some html, please be careful!', verbose_name='Balloon header')),
                ('balloonBody', models.TextField(blank=True, help_text='Replace "Balloon content".                                     Can use some html, please be careful!', verbose_name='Balloon body')),
                ('balloonFooter', models.TextField(blank=True, help_text='Can use some html, please be careful!', verbose_name='Balloon footer')),
            ],
        ),
        migrations.CreateModel(
            name='YandexMapModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='cmsplugin_yandex_maps_yandexmapmodel', serialize=False, to='cms.CMSPlugin')),
                ('title', models.CharField(blank=True, max_length=140, null=True, verbose_name='Map title')),
                ('map_type', models.CharField(choices=[('map', 'Scheme'), ('satellite', 'Satellite'), ('hybrid', 'Hybryd')], default='map', max_length=10, verbose_name='Initial type')),
                ('route', models.BooleanField(default=False, help_text='Create route between points (unstable)', verbose_name='Create route')),
                ('clusterisation', models.BooleanField(default=True, verbose_name='Clusterisation')),
                ('cluster_disable_click_zoom', models.BooleanField(default=True, verbose_name='Disable click zoom')),
                ('cluster_icon', models.CharField(choices=[('default', 'Default'), ('inverted', 'Inverted')], default='default', max_length=8, verbose_name='Cluster icon')),
                ('cluster_color', models.CharField(choices=[('blue', 'Blue'), ('red', 'Red'), ('darkOrange', 'Dark orange'), ('night', 'Night'), ('darkBlue', 'DarkBlue'), ('pink', 'Pink'), ('gray', 'Gray'), ('brown', 'Brown'), ('darkGreen', 'Dark green'), ('violet', 'Violet'), ('black', 'Black'), ('yellow', 'Yellow'), ('green', 'Green'), ('orange', 'Orange'), ('lightBlue', 'Light blue'), ('olive', 'Olive')], default='red', max_length=15, verbose_name='Cluster icon color')),
                ('lang', models.CharField(choices=[('ru_RU', 'Русский'), ('en_RU', 'English'), ('uk_UA', 'Українська'), ('tr_TR', 'Türk')], default='ru_RU', max_length=5, verbose_name='Language')),
                ('auto_placement', models.BooleanField(default=True, verbose_name='Auto placement')),
                ('zoom', models.IntegerField(default=12, verbose_name='Zoom')),
                ('min_zoom', models.IntegerField(default=0, verbose_name='Minimum zoom')),
                ('max_zoom', models.IntegerField(default=23, verbose_name='Maximum zoom')),
                ('center_lt', models.FloatField(default=55.76, verbose_name='Latitude')),
                ('center_lg', models.FloatField(default=37.64, verbose_name='Longitude')),
                ('auto_size', models.BooleanField(default=True, help_text='If checked, the map will try to take all                                     available width, keeping aspect ratio', verbose_name='Auto size')),
                ('width', models.IntegerField(verbose_name='Width')),
                ('height', models.IntegerField(verbose_name='Height')),
                ('classes', models.TextField(blank=True, verbose_name='CSS classes')),
                ('behaviors', models.ManyToManyField(default=(1, 2, 3, 4, 6), help_text="Sorry for the Russian, I'm too lazy and just                                     copied the description from the documentation", to='cmsplugin_yandex_maps.Behavior', verbose_name='Behaviors')),
                ('controls', models.ManyToManyField(default=(5, 6, 7), help_text="Sorry for the Russian, I'm too lazy and just                                     copied the description from the documentation", to='cmsplugin_yandex_maps.Control', verbose_name='Controls')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.AddField(
            model_name='placemark',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cmsplugin_yandex_maps.YandexMapModel'),
        ),
    ]
